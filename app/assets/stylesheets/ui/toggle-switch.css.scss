$switch-height: 25px;
$switch-width: 65px;
$switch-radius: $switch-height;
$switch-on-color: lighten($bluefields-blue, 10%);
$switch-off-color: #dddddd;
$switch-border-width: 0;
$switch-on-text: "ON";
$switch-off-text: "OFF";

.switch-ui {
  position: relative;
  width: $switch-width;
  height: $switch-height;
  display: inline-block;
  vertical-align: middle;
  &.animate {
    .switch-ui-inner {
      @include transition(margin-left $transition-time $transition-easing);
      @include transition-property(margin-left, background-color, color);
      @include transition-duration($transition-time);
      @include transition-timing-function($transition-easing);
    }
    .switch-ui-switch {
      @include transition(left $transition-time $transition-easing);
    }
  }
  .switch-ui-checkbox {
    display: none;
    &:checked + .switch-ui-label .switch-ui-inner {
      margin-left: 0;
      background-color: $switch-on-color;
      color: $bluefields-white;
    }
    &:checked + .switch-ui-label .switch-ui-switch {
      left: $switch-width - $switch-height + $switch-border-width;
    }
  }
  .switch-ui-label {
    display: block;
    overflow: hidden;
    border-radius: $switch-radius;
    height: $switch-height;
    .switch-ui-inner {
      width: 200%;
      height: 100%;
      margin-left: -100%;
      background-color: $switch-off-color;
      color: $bluefields-white;
      &:before, &:after {
        float: left;
        width: 50%;
        height: $switch-height;
        line-height: $switch-height;
        padding: 0;
        @include helvetica(500);
      }
      &:before {
        content: $switch-on-text;
        padding-left: 10px;
      }
      &:after {
        content: $switch-off-text;
        padding-right: 10px;
        text-align: right;
      }
    }
    .switch-ui-switch {
      position: absolute;
      width: $switch-height - $switch-border-width * 2;
      height: $switch-height - $switch-border-width * 2;
      background: $bluefields-white;
      border-radius: $switch-radius;
      top: $switch-border-width;
      left: $switch-border-width;
    }
  }
}

/* ------------------------------------------
CSS TOGGLE SWITCHES (IonuÈ› Colceriu)
Licensed under Unlicense 
https://github.com/ghinda/css-toggle-switch
------------------------------------------ */


@mixin switch-shared() {
  display: block;
  height: $switch-height;


  a {
    display: block;
    @include transition(all 0.3s ease-out);
  }

  label,
  > span {
    line-height: $switch-height;
    vertical-align: middle;
  }

  /* Outline the toggles when the inputs are focused
   */
  input:focus ~ a,
  input:focus + label {
    outline: 1px dotted #888;
  }

}

/* Checkbox
 */
@mixin switch-light() {

  @include switch-shared();

  position: relative;
  overflow: visible;
  padding: 0;
  margin-left: 100px;

  /* Position the label over all the elements, except the slide-button (<a>)
   * Clicking anywhere on the label will change the switch-state
   */
  label {
    position: relative;
    z-index: 3;

    display: block;
    width: 100%;
  }

  /* Don't hide the input from screen-readers and keyboard access
   */
  input {
    position: absolute;
    opacity: 0;
    z-index: 5;

    &:checked ~ a {
      right: 0%;
    }

  }

  > span {
    position: absolute;
    left: -100px;
    color: #333;
    width: 100%;
    margin: 0;
    padding-right: 100px;

    text-align: left;

    span {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 5;
      color: white;
      display: block;
      width: 50%;
      margin-left: 100px;

      text-align: center;

      &:last-child {
        left: 50%;
      }
    }

  }

  a {
    position: absolute;
    right: 50%;
    top: 0;
    z-index: 4;

    display: block;
    width: 50%;
    height: 100%;
    padding: 0;
  }

}

/* Radio Switch
 */
@mixin switch-toggle() {

  @include switch-shared();

  position: relative;

  /* For callout panels in foundation
   */
  padding: 0 !important;

  input {
    position: absolute;
    opacity: 0;
  }

  input + label {
    position: relative;
    z-index: 2;

    float: left;
    width: 50%;
    height: 100%;

    margin: 0;
    text-align: center;
  }

  a {
    position: absolute;
    top: 0;
    left: 0;
    padding: 0;
    z-index: 1;

    width: 50%;
    height: 100%;
  }

  input:last-of-type:checked ~ a {
    left: 50%;
  }

  /* Generate styles for the multiple states */
  @for $i from 1 through 3 {
    $state: $i + 2;
    $width: 100 / ($i + 2);

    &.switch-#{$state} {
      label,
      a {
        width: $width * 1%;
      }
    }

    @for $j from 2 through ($i + 1) {
      &.switch-#{$state} input:checked:nth-of-type(#{$j}) ~ a {
        left: $width * ($j - 1) * 1%;
      }
    }

    &.switch-#{$state} input:checked:last-of-type ~ a {
      left: 100 - $width * 1%;
    }
  }

}

/* Hide by default
 */
.switch-toggle a,
.switch-light span span {
  display: none;
}


@media only screen {

  .switch-light {
    @include switch-light();
    &.no-label {
      margin-left: 0;
    }

    a, input, label, span {
      outline: 0;
    }
  }

  .switch-toggle {
    @include switch-toggle();
    a, input, label, span {
      outline: 0!important;
    }
  }

  .switch-candy {
    background-color: $switch-off-color;
    border-radius: $switch-radius;
    color: $bluefields-black;
    font-weight: bold;
    text-align: center;

    label {
      color: $bluefields-white;
      @include transition(color 0.2s ease-out);
    }

    input:checked + label {
      color: $bluefields-white;
    }

    a {
      background-color: $switch-on-color;
      border-radius: $switch-radius;
    }

    > span {
      color: #333;
        span {
        color: #fff;
      }
    }
  }

}

/* Bugfix for older Webkit, including mobile Webkit. Adapted from
 * http://css-tricks.com/webkit-sibling-bug/
 */
.switch-light,
.switch-toggle {
  @media only screen and (-webkit-max-device-pixel-ratio: 2) and (max-device-width: 1280px) {
    -webkit-animation: webkitSiblingBugfix infinite 1s;
  }
}

@-webkit-keyframes webkitSiblingBugfix {
  from {
    -webkit-transform: translate3d(0,0,0);
  } to {
    -webkit-transform: translate3d(0,0,0);
  }
}